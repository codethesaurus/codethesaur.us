{
  "meta": {
    "language": "javascript",
    "language_name": "JavaScript",
    "structure": "functions",
    "language_version": "ECMAScript 2021"
  },
  "concepts": {
    "void_function_no_parameters": {
      "name": "Function that does not return a value and takes no parameters",
      "code": "function method() {\n}"
    },
    "void_function_with_parameters": {
      "name": "Function that does not return a value and that takes 1 or more defined parameters",
      "code": "function method(param1, param2) {\n}"
    },
    "void_function_with_keyword_parameters": {
      "name": "Function that does not return a value and that takes 0 or more defined keyword parameters",
      "code": "function method({param1, param2}) {\n}"
    },
    "void_function_variable_parameters": {
      "name": "Function that does not return a value and function that takes an unknown number of parameters",
      "code": "function method(...params) {\n}"
    },
    "return_value_function_no_parameters": {
      "name": "Function that returns a value and takes no parameters",
      "code": "function method() {\n  return true;\n}"
    },
    "return_value_function_with_parameters": {
      "name": "Function that returns a value and takes 1 or more defined parameters",
      "code": "function method(param1, param2) {\n  return true;\n}"
    },
    "return_value_function_with_keyword_parameters": {
      "name": "Function that returns a value and takes 0 or more defined keyword parameters",
      "code": "function method({param1, param2}) {\n  return true;\n}"
    },
    "return_value_function_variable_parameters": {
      "name": "Function that returns a value and takes an unknown number of parameters",
      "code": "function method(...params) {\n  return true;\n}"
    },
    "anonymous_function_no_parameters": {
      "name": "Anonymous function that takes no parameters",
      "code": [
        "const method = function() {\n}",
        "const method = () => {\n}"
      ]
    },
    "anonymous_function_with_parameters": {
      "name": "Anonymous function that takes 1 or more defined parameters",
      "code": [
        "const method = function(param1, param2) {\n}",
        "const method = (param1, param2) => {\n}"
      ]
    },
    "anonymous_function_with_keyword_parameters": {
      "name": "Anonymous function that takes 0 or more defined keyword parameters",
      "code": [
        "const method = function({param1, param2}) {\n}",
        "const method = ({param1, param2}) => {\n}"
      ]
    },
    "anonymous_function_variable_parameters": {
      "name": "Anonymous function that takes an unknown number of parameters",
      "code": [
        "const method = function(...params) {\n}",
        "const method = (...params) => {\n}"
      ]
    },
    "anonymous_function_no_parameters_with_return": {
      "name": "Anonymous function that takes no parameters and returns a value",
      "code": [
        "const method = function() {\n  return true;\n}",
        "const method = () => true"
      ]
    },
    "anonymous_function_with_parameters_with_return": {
      "name": "Anonymous function that takes 1 or more defined parameters and returns a value",
      "code": [
        "const method = function(param1, param2) {\n  return true;\n}",
        "const method = (param1, param2) => true"
      ]
    },
    "anonymous_function_with_keyword_parameters_with_return": {
      "name": "Anonymous function that takes 0 or more defined keyword parameters and returns a value",
      "code": [
        "const method = function({param1, param2}) {\n  return true;\n}",
        "const method = ({param1, param2}) => true"
      ]
    },
    "anonymous_function_variable_parameters_with_return": {
      "name": "Anonymous function that takes an unknown number of parameters and returns a value",
      "code": [
        "const method = function(...params) {\n  return true;\n}",
        "const method = (...params) => true"
      ]
    },
    "call_subroutine": {
      "not-implemented": true,
      "name": "Call subroutine"
    },
    "return_from_subroutine": {
      "not-implemented": true,
      "name": "Return from subroutine"
    }
  }
}